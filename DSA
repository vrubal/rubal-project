ðŸ“Œ Core Patterns
1. Fixed Window Size (k)
    Window size is constant.
    Slide from left to right.
    Maintain running sum/aggregate.

    Examples:
      Maximum/Minimum sum of k consecutive elements.
      Average of every k-length subarray.
      Maximum number of 1s in a window of size k.

2. Longest Window / Substring
    Window size is variable, expand and shrink using two pointers.
    Condition decides when to shrink.

  Examples:
    Longest substring without repeating characters.
    Longest subarray with at most K distinct elements.
    Pattern matching in substring.

3. Counting Windows/Subarrays Matching Condition
    Count how many windows satisfy a property.
    Often uses map + prefix sum + hashing.
    Examples:
      Count subarrays with sum = K.
      Count substrings with exactly K distinct characters.
      GeeksforGeeks problem
       (Count substrings with same first & last character).

4. Minimum Window / Smallest Subarray
    Find shortest subarray/substring satisfying a condition.
    Expansion until condition met, then shrink.

    Examples:
      Minimum window substring containing all characters of another string.
      Smallest subarray with sum â‰¥ K.
      Shortest substring with all vowels.

Dynamic Programming:
  Steps to follow:
    a. Represent problem in terms of index
    b. Identify operations on index
    c. Perform all possible operations on indexes
    d. count/min/max of all possible operation performed
      i.   count: in-case question ask tolal number of all possible ways.
      ii.  min: in-case question ask minimum of all possible ways
      iii. max: in-case question ask maximum of all possible ways.
  Type of problems in DP
      1. 1DP
      2. DP on grids
      3. DP on subsequences
      4. DP on string
      5. DP on stocks
      6. DP on LIS
 
Graph:
    Depth First Search uses recursion
    Breadth First Search using Queue
    Cycle detection
    Topological sort : Using DFS recurstion or Indegree/OutDegree array
    Distance source to destination: using Queue 
    Shortest Path : Using BFS and priority Queue    
    Disjoint Set: Used for a dynamic graph generally refers to a graph that keeps on changing its configuration.  
                  Rank: Distance between fartest leaf node
                  Size: Number of children in a group
